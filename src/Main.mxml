<?xml version="1.0"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:components="components.*"
               creationComplete="onCreationComplete(event)"
               addedToStage="onAddedToStage(event)"
               backgroundColor="0x323232"
               frameRate="60">

    <fx:Style source="/assets/css/global.css" />

    <fx:Script>
        <![CDATA[
        import br.com.stimuli.loading.BulkProgressEvent;

        import com.greensock.TweenLite;

        import managers.AssetManager;

        import mx.events.FlexEvent;

        import signal.SignalEvent;

        import signal.SignalManager;

        private var assetManager:AssetManager;
        private var signalManager:SignalManager;
        private var stageQuality:String;

        private function onCreationComplete(event:FlexEvent):void
        {
            signalManager = SignalManager.getInstance();
            signalManager.addEventListener(SignalEvent.SIGNAL, handleSignal);

            browserContainer.alpha = 0;
            progressBar.moveTo(0);

            // Preload everything
            assetManager = AssetManager.getInstance();
            assetManager.addEventListener(BulkProgressEvent.PROGRESS, onLoadProgress);
            assetManager.addEventListener(BulkProgressEvent.COMPLETE, onLoadComplete);
            assetManager.load();
            preloaderItemsLabel.text = "Loading assets ...";
        }

        private function handleSignal(signalEvent:SignalEvent):void
        {
            // Handle global Signals

            // Stage Quality
            if (stage && signalEvent.payload.hasOwnProperty("setQuality"))
                stage.quality = signalEvent.payload.setQuality;
        }

        private function onLoadProgress(event:BulkProgressEvent):void
        {
            progressBar.animateTo((event.itemsLoaded / event.itemsTotal) * 100);
            preloaderItemsLabel.text = "Loading assets " + event.itemsLoaded + " / " + event.itemsTotal;
        }

        private function onLoadComplete(event:BulkProgressEvent):void
        {
            preloaderItemsLabel.text = "Get ready ...";
            assetManager.removeEventListener(BulkProgressEvent.PROGRESS, onLoadProgress);
            assetManager.removeEventListener(BulkProgressEvent.COMPLETE, onLoadComplete);
            setTimeout(function ():void
            {
                TweenLite.to(preloaderGroup, .4, {alpha: 0, onComplete: onPreloaderFadeOut});
            }, 1000);
        }

        private function onPreloaderFadeOut():void
        {
            removeElement(preloaderGroup);
            TweenLite.to(browserContainer, .4, {alpha: 1});
            browser.start();
        }
        ]]>
    </fx:Script>

    <s:Group id="browserContainer"
             width="100%"
             height="100%">

        <components:BrowserComponent id="browser"
                                     width="100%"
                                     height="100%" />

    </s:Group>

    <s:VGroup id="preloaderGroup"
              width="100%"
              height="100%"
              horizontalAlign="center"
              verticalAlign="middle">
        <components:ActionLogoComponent />
        <components:ProgressBarComponent id="progressBar" />
        <s:Label id="preloaderItemsLabel" />
    </s:VGroup>

</s:Application>