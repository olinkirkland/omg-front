<?xml version="1.0"?>
<pages:Page xmlns:fx="http://ns.adobe.com/mxml/2009"
            xmlns:s="library://ns.adobe.com/flex/spark"
            xmlns:pages="pages.*"
            creationComplete="onCreationComplete(event)"
            width="100%"
            height="100%">

    <fx:Script>
    <![CDATA[
        import components.DynamicPanImageButton;

        import global.Util;

        import mx.events.FlexEvent;

        import signal.SignalEvent;
        import signal.SignalManager;

        private var features:Array;

        private function onCreationComplete(event:FlexEvent):void
        {
            // Signal Manager
            signalManager = SignalManager.getInstance();
            signalManager.addEventListener(SignalEvent.SIGNAL, handleSignal);

            var loader:URLLoader = new URLLoader();
            loader.addEventListener(Event.COMPLETE, onRead);
            var r:URLRequest = new URLRequest(Util.local("splash.json"));
            loader.load(r);
        }

        public function onRead(event:Event):void
        {
            payload = JSON.parse(event.target.data);

            // Set spotlight
            var spotlight:DynamicPanImageButton = new DynamicPanImageButton();
            spotlight.source                    = Util.local(Util.formatAssetURL(payload.spotlight.image));
            trace(spotlight.source);
            spotlight.color      = payload.spotlight.imageColor;
            spotlight.buttonText = payload.spotlight.buttonText;
            spotlight.labelText  = payload.spotlight.labelText;
            spotlight.data       = payload.spotlight.data;
            spotlightGroup.addElement(spotlight);

            // Set features
            features = [];
            for each (var featureObject:Object in payload.features)
            {
                var feature:DynamicPanImageButton = new DynamicPanImageButton();
                feature.source                    = Util.local(Util.formatAssetURL(featureObject.image));
                trace(feature.source);
                feature.color      = featureObject.imageColor;
                feature.buttonText = featureObject.buttonText;
                feature.labelText  = featureObject.labelText;
                feature.data       = featureObject.data;
                featuresGroup.addElement(feature);
                features.push(feature);
            }

            // Force Resize
            invalidateSize();
            invalidateDisplayList();
            invalidateParentSizeAndDisplayList();
        }

        override public function handleSignal(signalEvent:SignalEvent):void
        {
            // Handle global Signals
        }

        override public function dispose():void
        {
            super.dispose();
        }
        ]]>
    </fx:Script>

    <s:VGroup width="100%"
              height="100%"
              padding="12"
              gap="3">

        <s:HGroup width="100%"
                  height="60%"
                  id="spotlightGroup" />

        <s:HGroup width="100%"
                  height="40%"
                  id="featuresGroup"
                  gap="3" />

    </s:VGroup>

</pages:Page>